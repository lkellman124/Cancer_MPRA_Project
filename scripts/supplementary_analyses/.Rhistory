treeheight_row = 20, treeheight_col = 20,
filename =  here("images/possible_supplementary_panels/mashr_mpraquant_pairwisesharing.pdf"),
width = 2.5, height = 2.25, angle_col = 90, border_color = NA,
fontsize = 6)
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F,
border_color = NA,
filename =  here("images/possible_supplementary_panels/dhs_correlation.pdf"),
width = 2.5, height = 2.25, angle_col = 90,
fontsize = 8)
View(correlations_hm)
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F,
border_color = NA,
filename =  here("images/possible_supplementary_panels/dhs_correlation.pdf"),
width = 2.5, height = 2.25, angle_col = 90,
fontsize = 8)
start = min(correlations_hm)
end = max(correlations_hm)
myBreaks = c(seq(start, end, 0.01))
myColor <- colorRampPalette(brewer.pal(n = 7, name =
"Purples"))(length(myBreaks))
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F,
border_color = NA,
filename =  here("images/possible_supplementary_panels/dhs_correlation.pdf"),
width = 2.5, height = 2.25, angle_col = 90,
fontsize = 8)
ggsave(here("images/possible_supplementary_panels/MASHr_estimated_mix.pdf"),
est_mix,
width = 50, height = 70, units = "mm")
ggsave(here("images/possible_supplementary_panels/MASHr_estimated_mix.pdf"),
est_mix,
width = 50, height = 60, units = "mm")
af <- dplyr::select(haplo_data, rsID, ref, alt, AFR, AMR, ASN, EUR) %>%
distinct()
haplo_data <- read_tsv(here("data/cmpra_haploreg_data_withquery.tsv"))
res_merge <- read_tsv(here("output/res_merge_withhitannot_20230627.tsv"))
res_merge <- dplyr::filter(res_merge, !is.na(disease))
mpraq <- read_tsv(here("output/mpranalyze_quantitative_results.tsv"))
af <- dplyr::select(haplo_data, rsID, ref, alt, AFR, AMR, ASN, EUR) %>%
distinct()
afq <- inner_join(af, dplyr::select(mpraq, celltype, locus, oligo_id,
Causal_SNP, statistic, zscore, fdr, Ref, Alt),
by = c("rsID" = "Causal_SNP"))
celltypes = unique(unlist(str_split(res_merge$disease, ",")))
cor_df_alpha <- data.frame()
cor_df_zscore <- data.frame()
cor_df_logfdr <- data.frame()
View(afq)
q_cell <- dplyr::filter(mpraq, celltype == cell)
View(q_cell)
q_cell <- dplyr::filter(afq, celltype == cell)
alpha_df <- data.frame(cell = cell,
afr_cor = cor.test(q_cell$AFR, q_cell$statistic),
amr_cor = cor.test(q_cell$AMR, q_cell$statistic),
asn_cor = cor.test(q_cell$ASN, q_cell$statistic),
eur_cor = cor.test(q_cell$EUR, q_cell$statistic))
q_cell <- dplyr::filter(afq, celltype == cell)
alpha_df <- data.frame(cell = cell,
afr_cor = cor.test(q_cell$AFR, q_cell$statistic),
amr_cor = cor.test(q_cell$AMR, q_cell$statistic),
asn_cor = cor.test(q_cell$ASN, q_cell$statistic),
eur_cor = cor.test(q_cell$EUR, q_cell$statistic))
alpha_df <- data.frame(cell = cell,
afr_cor = cor.test(q_cell$AFR, q_cell$statistic)$estimate,
afr_cor = cor.test(q_cell$AFR, q_cell$statistic)$p.value,
amr_cor = cor.test(q_cell$AMR, q_cell$statistic)$estimate,
amr_cor = cor.test(q_cell$AMR, q_cell$statistic)$p.value,
asn_cor = cor.test(q_cell$ASN, q_cell$statistic)$estimate,
asn_cor = cor.test(q_cell$ASN, q_cell$statistic)$p.value
eur_cor = cor.test(q_cell$EUR, q_cell$statistic)$estimate,
alpha_df <- data.frame(cell = cell,
afr_cor = cor.test(q_cell$AFR, q_cell$statistic)$estimate,
afr_cor = cor.test(q_cell$AFR, q_cell$statistic)$p.value,
amr_cor = cor.test(q_cell$AMR, q_cell$statistic)$estimate,
amr_cor = cor.test(q_cell$AMR, q_cell$statistic)$p.value,
asn_cor = cor.test(q_cell$ASN, q_cell$statistic)$estimate,
asn_cor = cor.test(q_cell$ASN, q_cell$statistic)$p.value,
eur_cor = cor.test(q_cell$EUR, q_cell$statistic)$estimate,
eur_cor = cor.test(q_cell$EUR, q_cell$statistic)$p.value)
View(alpha_df)
alpha_df <- data.frame(cell = cell,
afr_cor = cor.test(q_cell$AFR, q_cell$statistic)$estimate,
afr_cor_p = cor.test(q_cell$AFR, q_cell$statistic)$p.value,
amr_cor = cor.test(q_cell$AMR, q_cell$statistic)$estimate,
amr_cor_p = cor.test(q_cell$AMR, q_cell$statistic)$p.value,
asn_cor = cor.test(q_cell$ASN, q_cell$statistic)$estimate,
asn_cor_p = cor.test(q_cell$ASN, q_cell$statistic)$p.value,
eur_cor = cor.test(q_cell$EUR, q_cell$statistic)$estimate,
eur_cor_p = cor.test(q_cell$EUR, q_cell$statistic)$p.value)
fdr_df <- data.frame(cell = cell,
afr_cor = cor.test(q_cell$AFR, -log10(q_cell$fdr))$estimate,
afr_cor_p = cor.test(q_cell$AFR, -log10(q_cell$zscore))$p.value,
amr_cor = cor.test(q_cell$AMR, -log10(q_cell$zscore))$estimate,
amr_cor_p = cor.test(q_cell$AMR, -log10(q_cell$zscore))$p.value,
asn_cor = cor.test(q_cell$ASN, -log10(q_cell$zscore))$estimate,
asn_cor_p = cor.test(q_cell$ASN, -log10(q_cell$zscore))$p.value,
eur_cor = cor.test(q_cell$EUR, -log10(q_cell$zscore))$estimate,
eur_cor_p = cor.test(q_cell$EUR, -log10(q_cell$zscore))$p.value)
View(fdr_df)
View(q_cell)
fdr_df <- data.frame(cell = cell,
afr_cor = cor.test(q_cell$AFR, -log10(q_cell$fdr), use = "complete.obs")$estimate,
afr_cor_p = cor.test(q_cell$AFR, -log10(q_cell$zscore), use = "complete.obs")$p.value,
amr_cor = cor.test(q_cell$AMR, -log10(q_cell$zscore), use = "complete.obs")$estimate,
amr_cor_p = cor.test(q_cell$AMR, -log10(q_cell$zscore), use = "complete.obs")$p.value,
asn_cor = cor.test(q_cell$ASN, -log10(q_cell$zscore), use = "complete.obs")$estimate,
asn_cor_p = cor.test(q_cell$ASN, -log10(q_cell$zscore), use = "complete.obs")$p.value,
eur_cor = cor.test(q_cell$EUR, -log10(q_cell$zscore), use = "complete.obs")$estimate,
eur_cor_p = cor.test(q_cell$EUR, -log10(q_cell$zscore), use = "complete.obs")$p.value)
celltypes = unique(unlist(str_split(res_merge$disease, ",")))
cor_df_alpha <- data.frame()
cor_df_zscore <- data.frame()
cor_df_logfdr <- data.frame()
for (cell in celltypes){
q_cell <- dplyr::filter(afq, celltype == cell)
alpha_df <- data.frame(cell = cell,
afr_cor = cor.test(q_cell$AFR, q_cell$statistic)$estimate,
afr_cor_p = cor.test(q_cell$AFR, q_cell$statistic)$p.value,
amr_cor = cor.test(q_cell$AMR, q_cell$statistic)$estimate,
amr_cor_p = cor.test(q_cell$AMR, q_cell$statistic)$p.value,
asn_cor = cor.test(q_cell$ASN, q_cell$statistic)$estimate,
asn_cor_p = cor.test(q_cell$ASN, q_cell$statistic)$p.value,
eur_cor = cor.test(q_cell$EUR, q_cell$statistic)$estimate,
eur_cor_p = cor.test(q_cell$EUR, q_cell$statistic)$p.value)
z_df <- data.frame(cell = cell,
afr_cor = cor.test(q_cell$AFR, q_cell$zscore)$estimate,
afr_cor_p = cor.test(q_cell$AFR, q_cell$zscore)$p.value,
amr_cor = cor.test(q_cell$AMR, q_cell$zscore)$estimate,
amr_cor_p = cor.test(q_cell$AMR, q_cell$zscore)$p.value,
asn_cor = cor.test(q_cell$ASN, q_cell$zscore)$estimate,
asn_cor_p = cor.test(q_cell$ASN, q_cell$zscore)$p.value,
eur_cor = cor.test(q_cell$EUR, q_cell$zscore)$estimate,
eur_cor_p = cor.test(q_cell$EUR, q_cell$zscore)$p.value)
fdr_df <- data.frame(cell = cell,
afr_cor = cor.test(q_cell$AFR, -log10(q_cell$fdr))$estimate,
afr_cor_p = cor.test(q_cell$AFR, -log10(q_cell$zscore))$p.value,
amr_cor = cor.test(q_cell$AMR, -log10(q_cell$zscore))$estimate,
amr_cor_p = cor.test(q_cell$AMR, -log10(q_cell$zscore))$p.value,
asn_cor = cor.test(q_cell$ASN, -log10(q_cell$zscore))$estimate,
asn_cor_p = cor.test(q_cell$ASN, -log10(q_cell$zscore))$p.value,
eur_cor = cor.test(q_cell$EUR, -log10(q_cell$zscore))$estimate,
eur_cor_p = cor.test(q_cell$EUR, -log10(q_cell$zscore))$p.value)
cor_df_alpha <- rbind(cor_df_alpha, alpha_df)
cor_df_zscore <- rbind(cor_df_zscore, z_df)
cor_df_logfdr <- rbind(cor_df_logfdr, fdr_df)
}
View(cor_df_alpha)
View(cor_df_logfdr)
View(cor_df_zscore)
af <- dplyr::select(haplo_data, rsID, ref, alt, AFR, AMR, ASN, EUR) %>%
distinct()
afc <- inner_join(af, res_merge[c(1, 45, 2:43)],
by = c("rsID" = "Causal_SNP"))
# allele frequences range from 0 - 1, meaning they're not always the real minor allele
# (they're alt, but not minor)
celltypes = unique(unlist(str_split(res_merge$disease, ",")))
cor_df_logfc <- data.frame()
cor_df_logfc_abs <- data.frame()
for (cell in celltypes){
logFC <- afc[grepl("logFC", colnames(afc)) & grepl(cell, colnames(afc))]
abs_df <- data.frame(cell = cell,
amr_cor = cor.test(afc$AMR, abs(logFC[[1]]))$estimate,
amr_cor_p = cor.test(afc$AMR, abs(logFC[[1]]))$p.value,
afr_cor = cor.test(afc$AFR, abs(logFC[[1]]))$estimate,
afr_cor_p = cor.test(afc$AFR, abs(logFC[[1]]))$p.value,
asn_cor = cor.test(afc$ASN, abs(logFC[[1]]))$estimate,
asn_cor_p = cor.test(afc$ASN, abs(logFC[[1]]))$p.value,
eur_cor = cor.test(afc$EUR, abs(logFC[[1]]))$estimate,
eur_cor_p = cor.test(afc$EUR, abs(logFC[[1]]))$p.value)
cor_df_logfc_abs <- rbind(cor_df_logfc_abs, abs_df)
fc_df <- data.frame(cell = cell,
amr_cor = cor.test(afc$AMR, logFC[[1]])$estimate,
amr_cor_p = cor.test(afc$AMR, logFC[[1]])$p.value,
afr_cor = cor.test(afc$AFR, logFC[[1]])$estimate,
afr_cor_p = cor.test(afc$AFR, logFC[[1]])$p.value,
asn_cor = cor.test(afc$ASN, logFC[[1]])$estimate,
asn_cor_p = cor.test(afc$ASN, logFC[[1]])$p.value,
eur_cor = cor.test(afc$EUR, logFC[[1]])$estimate,
eur_cor_p = cor.test(afc$EUR, logFC[[1]])$p.value)
cor_df_logfc <- rbind(cor_df_logfc, fc_df)
}
cor_df_logfc <- cor_df_logfc %>%
mutate(amr_cor_p = p.adjust(amr_cor_p, method = "fdr"),
afr_cor_p = p.adjust(afr_cor_p, method = "fdr"),
asn_cor_p = p.adjust(asn_cor_p, method = "fdr"),
eur_cor_p = p.adjust(eur_cor_p, method = "fdr"))
cor_df_logfc_abs <- cor_df_logfc_abs %>%
mutate(amr_cor_p = p.adjust(amr_cor_p, method = "fdr"),
afr_cor_p = p.adjust(afr_cor_p, method = "fdr"),
asn_cor_p = p.adjust(asn_cor_p, method = "fdr"),
eur_cor_p = p.adjust(eur_cor_p, method = "fdr"))
ggplot(afc, aes(x = EUR, y = hmec_logFC)) +
geom_point(size = 0.1)
ggplot(afc, aes(x = AFR, col = ifelse(is.na(hit_spec, T, F)))) +
geom_density()
View(afc)
colnames(res_merge)
afc <- inner_join(af, res_merge[c(1, 45, 2:43, 72)],
by = c("rsID" = "Causal_SNP"))
ggplot(afc, aes(x = AFR, col = ifelse(is.na(hit_spec, T, F)))) +
geom_density()
ggplot(afc, aes(x = AFR, col = ifelse(is.na(hit_spec), T, F))) +
geom_density()
ggplot(afc, aes(x = AMR, col = ifelse(is.na(hit_spec), T, F))) +
geom_density()
ggplot(afc, aes(x = EUR, col = ifelse(is.na(hit_spec), T, F))) +
geom_density()
ggplot(afc, aes(x = ASN, col = ifelse(is.na(hit_spec), T, F))) +
geom_density()
View(afq)
View(afq)
ggplot(afq, aes(x = AFR, col = ifelse(fdr < 0.05, T, F))) +
geom_density()
ggplot(afq, aes(x = AMR, col = ifelse(fdr < 0.05, T, F))) +
geom_density()
ggplot(afq, aes(x = EUR, col = ifelse(fdr < 0.05, T, F))) +
geom_density()
ggplot(afq, aes(x = ASN, col = ifelse(fdr < 0.05, T, F))) +
geom_density()
ggplot(dplyr::filter(afq, !is.na(fdr)), aes(x = AFR, col = ifelse(fdr < 0.05, T, F))) +
geom_density()
ggplot(dplyr::filter(afq, !is.na(fdr)), aes(x = AMR, col = ifelse(fdr < 0.05, T, F))) +
geom_density()
ggplot(dplyr::filter(afq, !is.na(fdr)), aes(x = EUR, col = ifelse(fdr < 0.05, T, F))) +
geom_density()
ggplot(dplyr::filter(afq, !is.na(fdr)), aes(x = ASN, col = ifelse(fdr < 0.05, T, F))) +
geom_density()
ggplot(afc, aes(x = EUR, col = ifelse(is.na(hit_spec), T, F))) +
geom_density()
ggsave(here("images/possible_supplementary_panels/allele_frequency_daSNVs_EUR.pdf"),
dasnv_eur,
width = 50, height = 60, units = "mm")
dasnv_eur  <- ggplot(afc, aes(x = EUR, col = ifelse(is.na(hit_spec), T, F))) +
geom_density() +
theme_minimal()
ggsave(here("images/possible_supplementary_panels/allele_frequency_daSNVs_EUR.pdf"),
dasnv_eur,
width = 40, height = 40, units = "mm")
dasnv_eur  <- ggplot(afc, aes(x = EUR, col = ifelse(is.na(hit_spec), T, F))) +
geom_density() +
theme_minimal() +
theme(text = element_text(,size = 5, family = "Helvetica"))
ggsave(here("images/possible_supplementary_panels/allele_frequency_daSNVs_EUR.pdf"),
dasnv_eur,
width = 40, height = 40, units = "mm")
dasnv_eur  <- ggplot(afc, aes(x = EUR, col = ifelse(is.na(hit_spec), T, F))) +
geom_density() +
theme_minimal() +
theme(text = element_text(,size = 5, family = "Helvetica"),
legend.text = element_text(size =5, family = "Helvetica"),
legend.title = element_text(size =5, family = "Helvetica"),
legend.key.size = unit(0.2, 'cm'))
ggsave(here("images/possible_supplementary_panels/allele_frequency_daSNVs_EUR.pdf"),
dasnv_eur,
width = 40, height = 40, units = "mm")
afc <- afc %>%
mutate(daSNV = ifelse(is.na(hit_spec), T, F))
dasnv_eur  <- ggplot(afc, aes(x = EUR, col = daSNV)) +
geom_density() +
theme_minimal() +
theme(text = element_text(,size = 5, family = "Helvetica"),
legend.text = element_text(size =5, family = "Helvetica"),
legend.title = element_text(size =5, family = "Helvetica"),
legend.key.size = unit(0.2, 'cm'))
ggsave(here("images/possible_supplementary_panels/allele_frequency_daSNVs_EUR.pdf"),
dasnv_eur,
width = 40, height = 40, units = "mm")
ggsave(here("images/possible_supplementary_panels/allele_frequency_daSNVs_EUR.pdf"),
dasnv_eur,
width = 60, height = 40, units = "mm")
afq <- afq %>%
mutate(tx_active = ifelse(fdr < 0.05, T, F))
q_eur <- ggplot(dplyr::filter(afq, !is.na(fdr)), aes(x = EUR, col = tx_active)) +
geom_density() +
theme_minimal() +
theme(text = element_text(,size = 5, family = "Helvetica"),
legend.text = element_text(size =5, family = "Helvetica"),
legend.title = element_text(size =5, family = "Helvetica"),
legend.key.size = unit(0.2, 'cm'))
ggsave(here("images/possible_supplementary_panels/allele_frequency_txactive_EUR.pdf"),
q_eur,
width = 60, height = 40, units = "mm")
ggsave(here("images/possible_supplementary_panels/allele_frequency_txactive_EUR.pdf"),
q_eur,
width = 40, height = 40, units = "mm")
ggsave(here("images/possible_supplementary_panels/allele_frequency_daSNVs_EUR.pdf"),
dasnv_eur,
width = 50, height = 40, units = "mm")
ggsave(here("images/possible_supplementary_panels/allele_frequency_txactive_EUR.pdf"),
q_eur,
width = 50, height = 40, units = "mm")
?get_pairwise_sharing
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
name_key <- read_tsv(here("data/celltype_name_colors.txt"))
mpraq <- read_tsv(here("output/mpranalyze_quantitative_results.tsv"))
mpraq <- mpraq %>% rowwise() %>%
mutate(cell_type = name_key$display_name[name_key$celltype == celltype])
mpraq <- mpraq %>% rowwise() %>%
mutate(cell_type = name_key$display_name[name_key$celltype == celltype])
mpraq <- mpraq %>% rowwise() %>%
mutate(disease = ifelse(is.na(disease), NA, name_key$cancer[name_key$celltype == celltype]))
mpraq <- read_tsv(here("output/mpranalyze_quantitative_results.tsv"))
mpraq <- mpraq %>% rowwise() %>%
mutate(cell_type = name_key$display_name[name_key$celltype == celltype])
mpraq <- mpraq %>% rowwise() %>%
mutate(disease = ifelse(is.na(disease), NA, name_key$cancer[name_key$celltype == celltype]))
res_merge <- read_tsv(here("output/res_merge_withhitannot_20230627.tsv"))
res_merge <- dplyr::filter(res_merge, !is.na(disease))
name_key <- read_tsv(here("data/celltype_name_colors.txt"))
res_merge <- read_tsv(here("output/res_merge_withhitannot_20230627.tsv"))
res_merge <- dplyr::filter(res_merge, !is.na(disease))
mpraq <- read_tsv(here("output/mpranalyze_quantitative_results.tsv"))
View(mpraq)
mpraq <- left_join(mpraq, distinct(dplyr::select(res_merge, locus, disease)))
mpraq <- read_tsv(here("output/mpranalyze_quantitative_results.tsv"))
mpraq <- left_join(mpraq, distinct(dplyr::select(res_merge, locus, disease)))
mpraq <- mpraq %>% rowwise() %>%
mutate(cell_type = name_key$display_name[name_key$celltype == celltype])
mpraq <- mpraq %>% rowwise() %>%
mutate(disease = ifelse(is.na(disease), NA, name_key$cancer[name_key$celltype == celltype]))
mpraq <- mpraq %>%
dplyr::select(cell_type, SNP = Causal_SNP, Ref, Alt, locus_id = locus,
oligo_id, oligo_type, lead_snp, disease, statistic,
FDR = fdr, zscore, mad.score, pval.mad, pval.zscore,
pval.empirical, control)
mpraq <- read_tsv(here("output/mpranalyze_quantitative_results.tsv"))
mpraq <- left_join(mpraq, distinct(dplyr::select(res_merge, locus, lead_snp, disease)))
mpraq <- mpraq %>% rowwise() %>%
mutate(cell_type = name_key$display_name[name_key$celltype == celltype])
mpraq <- mpraq %>% rowwise() %>%
mutate(disease = ifelse(is.na(disease), NA, name_key$cancer[name_key$celltype == celltype]))
mpraq <- mpraq %>%
dplyr::select(cell_type, SNP = Causal_SNP, Ref, Alt, locus_id = locus,
oligo_id, oligo_type, lead_snp, disease, statistic,
FDR = fdr, zscore, mad.score, pval.mad, pval.zscore,
pval.empirical, control)
mpraq <- mpraq %>% dplyr::filter(control | !is.na(SNP))
write_tsv(mpraq, here("output/SupplementaryTables/mpranalyze_quantitative_results_supp_table.tsv"))
haplo <- read_tsv(here("output/cmpra_haploreg_data.tsv"))
haplo <- read_tsv(here("data/cmpra_haploreg_data.tsv"))
haplo_data <- read_tsv(here("data/cmpra_haploreg_data_withquery.tsv"))
haplo <- distinct(dplyr::select(haplo, rsID, AFR, AMR, ASN, EUR))
haplo <- read_tsv(here("data/cmpra_haploreg_data_withquery.tsv"))
haplo <- distinct(dplyr::select(haplo, rsID, AFR, AMR, ASN, EUR))
res_merge <- left_join(res_merge, haplo, by = c("Causal_SNP" = "rsID"))
mprac <- res_merge
# will need to unnest and convert hit_any_celltype, hit_spec, and disease
mprac_cut <- dplyr::select(mprac, locus, disease, hit_any_celltype, hit_spec, hichip_cell_type) %>%
mutate(disease = str_split(disease, ",")) %>%
unnest(disease) %>%
rowwise() %>%
mutate(disease = name_key$cancer[name_key$celltype == disease]) %>%
group_by(locus, hit_any_celltype, hit_spec, hichip_cell_type) %>%
summarise(disease = paste(sort(disease), collapse = ",")) %>%
mutate(hichip_cell_type = str_split(hichip_cell_type, ",")) %>%
unnest(hichip_cell_type) %>%
rowwise() %>%
mutate(hichip_cell_type = ifelse(!is.na(hit_any_celltype),
name_key$display_name[name_key$celltype == hichip_cell_type],
NA)) %>%
group_by(locus, disease, hit_any_celltype, hit_spec) %>%
summarise(hichip_cell_type = paste(sort(hichip_cell_type), collapse = ",")) %>%
mutate(hit_any_celltype = str_split(hit_any_celltype, ",")) %>%
unnest(hit_any_celltype) %>%
rowwise() %>%
mutate(hit_any_celltype = ifelse(!is.na(hit_any_celltype),
name_key$display_name[name_key$celltype == hit_any_celltype],
NA)) %>%
group_by(locus, disease, hit_spec, hichip_cell_type) %>%
summarise(hit_any_celltype = paste(sort(hit_any_celltype[!is.na(hit_any_celltype)]), collapse = ",")) %>%
mutate(hit_spec = str_split(hit_spec, ",")) %>%
unnest(hit_spec) %>%
rowwise() %>%
mutate(hit_spec = ifelse(!is.na(hit_spec),
name_key$cancer[name_key$celltype == hit_spec],
NA)) %>%
group_by(locus, disease, hit_any_celltype, hichip_cell_type) %>%
summarise(hit_spec = paste(sort(hit_spec[!is.na(hit_spec)]), collapse = ","))
mprac <- dplyr::select(mprac, -disease, -hit_any_celltype, -hit_spec, -hichip_cell_type)
mprac <- full_join(mprac, mprac_cut)
mprac <- mprac %>%
dplyr::select(SNP = Causal_SNP, Ref, Alt, `Cancer Type` = disease,
2:43,
`Chr (hg19)` = Chr_37, `Position (hg19)` = Start_37,
`Lead SNP` = lead_snp, PUBMEDID,
`Lead SNP OR or Beta` = `OR or BETA`,
`GWAS risk allele` = gwas_risk_allele,
`GTEx eGenes (tissue specific)` = gtex_egenes_spec,
`GTEx eGenes (shared with lead SNV)` = gtex_spec_lead_shared,
`eQTLgen eGenes` = eqtlgen_egenes,
`eQTLgen eGenes (shared with lead SNV)` = eqtlgen_egene_lead_shared,
`H3K27ac HiChIP ptGenes` = hichip_egene,
`H3K27ac HiChIP cell type` = hichip_cell_type,
`Nearby genes` = genes_within_10kb,
`Cell types with differential activity` = hit_any_celltype,
`daSNV celltype` = hit_spec,
`MAF AFR` = AFR,
`MAF AMR` = AMR,
`MAF ASN` = ASN,
`MAF EUR` = EUR)
mprac <- mprac[!grepl("pval", colnames(mprac))]
write_tsv(mprac, here("output/SupplementaryTables/differential_activity_results.tsv"))
View(mprac)
rhoa <- read_tsv(here("data/RhoA_Stim_rs1HDR_Assay.txt"),
skip = 1)
View(rhoa)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
res_merge <- read_tsv(here("output/res_merge_withhitannot_20230627.tsv"))
res_merge <- dplyr::filter(res_merge, !is.na(disease))
variant_id_df <- read_tsv(here("output/putative_causal_snps_gtex_variant_ids.tsv"))
res_merge <- left_join(res_merge, dplyr::select(variant_id_df, locus, Causal_SNP, variant_id))
dapg <- read_tsv(here("data/GTEx_v8_finemapping_DAPG/GTEx_v8_finemapping_DAPG.vcf.gz"),
col_names = c("chrom", "pos", "variant_id", "ref", "alt", "entry"))
dapg <- dplyr::filter(dapg, variant_id %in% res_merge$variant_id)
dapg <- dapg %>% mutate(entry = str_split(entry, "\\|")) %>%
unnest(entry)
dapg <- dapg %>% mutate(signal_id = str_remove(entry, "@.*$"),
gene = str_remove(entry, ":.*$"),
tissue = str_remove(str_remove(entry, "^.*@"), "=.*$"),
pip = str_remove(str_remove(entry, "^.*="), "\\[.*$"),
spip = str_remove(str_remove(entry, "^.*\\["), ":.*$"),
cluster_size = str_remove(str_remove(entry, ".*:"), "\\].*$"))
dapg <- dapg %>% mutate(pip = as.numeric(pip),
spip = as.numeric(spip))
res_cut <- res_merge %>%  mutate(disease = str_split(disease, ","))
res_cut <- res_cut %>% unnest(disease)
res_cut$logFC <- apply(res_cut, 1,
function(x) x[paste0(x[["disease"]], "_logFC")])
res_cut$fdr <- apply(res_cut, 1,
function(x) x[paste0(x[["disease"]], "_fdr")])
res_cut <- dplyr::select(res_cut, locus, Causal_SNP, variant_id, disease, gtex_egenes_all, gtex_egenes_spec, hit_any_celltype, hit_spec, fdr, logFC)
res_cut <- res_cut %>% mutate_at(vars(fdr, logFC), as.numeric)
res_long <- res_merge[c(1, 45, 53, 71:73, grep("fdr", colnames(res_merge)))]
res_long <- res_long %>%
pivot_longer(cols = -c(locus, Causal_SNP, disease, hit_any_celltype, hit_spec,
variant_id),
names_to = "mpra_celltype", values_to = "fdr")
res_long <- res_long %>%
mutate(mpra_celltype = str_remove(mpra_celltype, "_fdr"))
keep_assoc <- unique(dapg$signal_id)
dapg_alt <- read_tsv(here("data/GTEx_v8_finemapping_DAPG/GTEx_v8_finemapping_DAPG.vcf.gz"),
col_names = c("chrom", "pos", "variant_id", "ref", "alt", "entry"))
dapg_alt <- dapg_alt %>% mutate(signal_name = str_remove(entry, "@.*"))
dapg_alt <- dplyr::filter(dapg_alt, signal_name %in% keep_assoc)
dapg_alt <- dapg_alt %>% mutate(entry = str_split(entry, "\\|")) %>%
unnest(entry)
dapg_alt <- dapg_alt %>% mutate(signal_id = str_remove(entry, "@.*$"),
gene = str_remove(entry, ":.*$"),
tissue = str_remove(str_remove(entry, "^.*@"), "=.*$"),
pip = str_remove(str_remove(entry, "^.*="), "\\[.*$"),
spip = str_remove(str_remove(entry, "^.*\\["), ":.*$"),
cluster_size = str_remove(str_remove(entry, ".*:"), "\\].*$"))
dapg_alt <- dapg_alt %>% mutate(pip = as.numeric(pip),
spip = as.numeric(spip))
dapg_alt <- dplyr::filter(dapg_alt, signal_name %in% keep_assoc)
# throws a warning: NAs introduced by coercion error
# it's coming from 52 entries that don't have spip
# looks like those entries just dont end with the [number] like the others
# ignoring
res_long_merge <- left_join(res_long, dplyr::select(dapg_alt, variant_id, signal_id, gene, tissue, pip, spip, cluster_size))
res_long_merge <- res_long_merge %>%
mutate(tissue_convert = case_when(
grepl("Breast|HMEC|BREAST|MAMM", tissue) ~ "hmec",
grepl("Eso|ESO", tissue) ~ "eso",
grepl("Keratinocyte|KC|Skin", tissue) ~ "kc,mc",
grepl("Kidney|KIDNEY", tissue) ~ "renal",
grepl("Lung|NHBE|LUNG", tissue) ~ "airway",
grepl("Ovary|OV", tissue) ~ "ov",
grepl("Panc|PANC", tissue) ~ "panc",
grepl("Melanocyte", tissue) ~ "mc",
grepl("Brain|Ast", tissue) ~ "ast",
grepl("Colon|COLON", tissue) ~ "colon",
grepl("Thyroid", tissue) ~ "thy",
grepl("Uterus", tissue) ~ "endo",
grepl("Pros", tissue) ~ "pros"))
# correlation, no regard for celltype
cor.test(-log10(res_long_merge$fdr), res_long_merge$pip)
# 0.096
res_long_merge <- res_long_merge %>%
mutate(tissue_convert = str_split(tissue_convert, ",")) %>%
unnest(tissue_convert)
res_long_merge_filt <- dplyr::filter(res_long_merge, tissue_convert == mpra_celltype )
# correlation between all MPRA results in the same celltype as the DAPG eQTL
cor.test(-log10(res_long_merge_filt$fdr), res_long_merge_filt$pip)
# 0.101
res_long_merge_filt_any_hit <- res_long_merge_filt %>%
mutate(hit_any_celltype = str_split(hit_any_celltype, ",")) %>%
unnest(hit_any_celltype) %>%
distinct() %>%
dplyr::filter(hit_any_celltype == tissue_convert)
cor.test(-log10(res_long_merge_filt_any_hit$fdr), res_long_merge_filt_any_hit$pip)
# 0.203
res_long_merge_filt_hit_spec <- res_long_merge_filt %>%
mutate(hit_spec = str_split(hit_spec, ",")) %>%
unnest(hit_spec) %>%
distinct() %>%
dplyr::filter(hit_spec == tissue_convert)
# correlation only for daSNVs in the same celltype
cor.test(-log10(res_long_merge_filt_hit_spec$fdr), res_long_merge_filt_hit_spec$pip)
# 0.416
