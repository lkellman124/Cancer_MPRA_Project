dhs_cors <- c(dhs_cors, corr_act_sig$estimate)
dhs_cors_p <- c(dhs_cors_p, corr_act_sig$p.value)
dhs_rownames <- c(dhs_rownames, dhs_cell)
}
j = 1
dhs_cell = intersect_files$celltype[j]
filename = intersect_files$filename[j]
filename
intersect <- read_tsv(filename,
col_names = c("chrom", "start_snp", "end_snp", "snp",
"chrom_dhs", "start_dhs", "end_dhs",
"name_dhs", "signal"))
View(intersect)
correlations_hm <- data.frame()
correlations_hm_p <- data.frame()
mpra_cells = unique(mpraq$celltype)
for (i in 1:length(mpra_cells)){
mpra_cell = mpra_cells[i]
dhs_cors = c()
dhs_cors_p = c()
dhs_rownames = c()
for (j in 1:dim(intersect_files)[1]){
dhs_cell = intersect_files$celltype[j]
filename = intersect_files$filename[j]
intersect <- read_tsv(filename,
col_names = c("chrom", "start_snp", "end_snp", "snp",
"chrom_dhs", "start_dhs", "end_dhs",
"signal"))
intersect <- intersect %>% dplyr::select(snp, signal) %>% distinct()
cell_mpraq <- mpraq %>%
dplyr::filter(celltype == mpra_cell  & !is.na(Causal_SNP) &
!is.na(statistic)) %>%
dplyr::select(locus, oligo_id, Causal_SNP, disease, statistic, zscore, fdr)
mpraq_int <- left_join(cell_mpraq, intersect,
by = c("Causal_SNP" = "snp"))
mpraq_int <- mpraq_int %>%
mutate(signal = ifelse(is.na(signal), 0, signal))
corr_act_sig <- cor.test(mpraq_int$signal[mpraq_int$fdr < 0.05],
mpraq_int$statistic[mpraq_int$fdr < 0.05])
dhs_cors <- c(dhs_cors, corr_act_sig$estimate)
dhs_cors_p <- c(dhs_cors_p, corr_act_sig$p.value)
dhs_rownames <- c(dhs_rownames, dhs_cell)
}
df <- data.frame(cellname = dhs_cors)
colnames(df) <- mpra_cell
df_p <- data.frame(cellname = dhs_cors_p)
colnames(df_p) <- mpra_cell
rownames(df) <- dhs_rownames
rownames(df_p) <- dhs_rownames
if (dim(correlations_hm)[1] == 0){
correlations_hm <- df
correlations_hm_p <- df_p
}else{
correlations_hm <- cbind(correlations_hm, df)
correlations_hm_p <- cbind(correlations_hm_p, df_p)
}
}
View(correlations_hm)
start = min(correlations_hm)
end = max(correlations_hm)
myBreaks = c(seq(start, end, 0.01))
myColor <- colorRampPalette(brewer.pal(n = 7, name =
"Blues"))(length(myBreaks))
library(RColorBrewer)
myColor <- colorRampPalette(brewer.pal(n = 7, name =
"Blues"))(length(myBreaks))
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20)
correlations_hm <- correlations_hm[sort(rownames(correlations_hm)),]
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20)
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F)
pheatmap::pheatmap(correlations_hm, scale = "column",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F)
pheatmap::pheatmap(correlations_hm, scale = "row",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F)
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F)
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F,
file_name =  here("images/possible_supplementary_panels/dhs_correlation.pdf"),
width = 7, height = 4, angle_col = 90,
fontsize_col = 14)
?pheatmap
here("images/possible_supplementary_panels/dhs_correlation.pdf")
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F,
file_name =  here("images/possible_supplementary_panels/dhs_correlation.pdf"))
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F,
filename =  here("images/possible_supplementary_panels/dhs_correlation.pdf"),
width = 7, height = 4, angle_col = 90,
fontsize_col = 14)
View(correlations_hm)
name_key <- read_tsv(here("data/celltype_name_colors.txt"))
test <- name_key$display_name[name_key$celltype == colnames(correlations_hm)]
test
colnames(correlations_hm) <- name_key$display_name[name_key$celltype == colnames(correlations_hm)]
rownames(correlations_hm) <- name_key$display_name[name_key$celltype == rownames(correlations_hm)]
test <- name_key$display_name[name_key$celltype == rownames(correlations_hm)]
test
rownames(correlations_hm)
test <- name_key$display_name[name_key$celltype == rownames(correlations_hm)]
View(name_key)
test <- name_key$display_name[name_key$celltype == rownames(correlations_hm)]
test
correlations_hm <- data.frame()
correlations_hm_p <- data.frame()
mpra_cells = unique(mpraq$celltype)
for (i in 1:length(mpra_cells)){
mpra_cell = mpra_cells[i]
dhs_cors = c()
dhs_cors_p = c()
dhs_rownames = c()
for (j in 1:dim(intersect_files)[1]){
dhs_cell = intersect_files$celltype[j]
filename = intersect_files$filename[j]
intersect <- read_tsv(filename,
col_names = c("chrom", "start_snp", "end_snp", "snp",
"chrom_dhs", "start_dhs", "end_dhs",
"signal"))
intersect <- intersect %>% dplyr::select(snp, signal) %>% distinct()
cell_mpraq <- mpraq %>%
dplyr::filter(celltype == mpra_cell  & !is.na(Causal_SNP) &
!is.na(statistic)) %>%
dplyr::select(locus, oligo_id, Causal_SNP, disease, statistic, zscore, fdr)
mpraq_int <- left_join(cell_mpraq, intersect,
by = c("Causal_SNP" = "snp"))
mpraq_int <- mpraq_int %>%
mutate(signal = ifelse(is.na(signal), 0, signal))
corr_act_sig <- cor.test(mpraq_int$signal[mpraq_int$fdr < 0.05],
mpraq_int$statistic[mpraq_int$fdr < 0.05])
dhs_cors <- c(dhs_cors, corr_act_sig$estimate)
dhs_cors_p <- c(dhs_cors_p, corr_act_sig$p.value)
dhs_rownames <- c(dhs_rownames, dhs_cell)
}
df <- data.frame(cellname = dhs_cors)
colnames(df) <- mpra_cell
df_p <- data.frame(cellname = dhs_cors_p)
colnames(df_p) <- mpra_cell
rownames(df) <- dhs_rownames
rownames(df_p) <- dhs_rownames
if (dim(correlations_hm)[1] == 0){
correlations_hm <- df
correlations_hm_p <- df_p
}else{
correlations_hm <- cbind(correlations_hm, df)
correlations_hm_p <- cbind(correlations_hm_p, df_p)
}
}
new_colnames <- name_key$display_name[name_key$celltype == colnames(correlations_hm)]
new_rownames <- name_key$display_name[name_key$celltype == rownames(correlations_hm)]
new_rownames
new_rownames <- ifelse(name_key$celltype == rownames(correlations_hm),
name_key$display_name,
colnames(correlations_hm))
new_rownames <- ifelse(name_key$celltype == rownames(correlations_hm),
name_key$display_name,
rownames(correlations_hm))
new_rownames
correlations_hm <- correlations_hm[sort(rownames(correlations_hm)),]
new_rownames <- sapply(rownames(correlations_hm),
function(x) name_key$display_name[name_key$celltype == x])
new_rownames
new_colnames <- sapply(colnames(correlations_hm),
function(x) name_key$display_name[name_key$celltype == x])
new_rownames <- sapply(rownames(correlations_hm),
function(x) name_key$display_name[name_key$celltype == x])
colnames(correlations_hm) <- new_colnames
rownames(correlations_hm) <- new_rownames
start = min(correlations_hm)
end = max(correlations_hm)
myBreaks = c(seq(start, end, 0.01))
myColor <- colorRampPalette(brewer.pal(n = 7, name =
"Blues"))(length(myBreaks))
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F,
filename =  here("images/possible_supplementary_panels/dhs_correlation.pdf"),
width = 7, height = 4, angle_col = 90,
fontsize_col = 14)
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F,
filename =  here("images/possible_supplementary_panels/dhs_correlation.pdf"),
width = 7, height = 4, angle_col = 90,
fontsize = 8)
pheatmap::pheatmap(correlations_hm, scale = "none",
breaks = myBreaks, color = myColor,
treeheight_row = 20, treeheight_col = 20,
cluster_rows = F, cluster_cols = F,
filename =  here("images/possible_supplementary_panels/dhs_correlation.pdf"),
width = 4, height = 3, angle_col = 90,
fontsize = 8)
View(correlations_sig)
View(correlations)
mean(correlations$corr_act)
View(correlations_hm)
View(metadata)
knitr::opts_chunk$set(echo = TRUE)
colon_fasta <- read("~/Documents/CancerMPRA/CRISPR_KO/colon_crispr_ko_guide_sequences.fa")
colon_fasta <- readLines("~/Documents/CancerMPRA/CRISPR_KO/colon_crispr_ko_guide_sequences.fa")
colon_tbl <- data.frame(guide_rna = colon_fasta[grepl(">", colon_fasta)],
sequence = colon_fasta[!grepl(">", colon_fasta)])
View(colon_tbl)
colon_tbl <- data.frame(guide_name = colon_fasta[grepl(">", colon_fasta)],
guide_sequence = colon_fasta[!grepl(">", colon_fasta)])
colon_tbl <- colon_tbl %>%
mutate(guide_name = str_remove("^>", guide_name))
library(tidyverse)
colon_tbl <- colon_tbl %>%
mutate(guide_name = str_remove("^>", guide_name))
colon_tbl <- colon_tbl %>%
mutate(guide_name = str_remove( guide_name, "^>"))
colon_tbl <- data.frame(guide_name = colon_fasta[grepl(">", colon_fasta)],
guide_sequence = colon_fasta[!grepl(">", colon_fasta)])
colon_tbl <- colon_tbl %>%
mutate(guide_name = str_remove( guide_name, "^>"))
write_tsv(colon_tbl, "~/Documents/CancerMPRA/CRISPR_KO/colon_crispr_ko_screen_guide_sequences_table.tsv")
colon_fasta_full <- readLines("~/Documents/CancerMPRA/CRISPR_KO/crispr_ko_guide_library_12022020.txt")
tail(colon_fasta_full)
colon_fasta_full <- data.frame(id = colon_fasta_full[grepl("[0-9]+")],
full_sequence = colon_fasta_full[!grepl("[0-9]+")])
colon_fasta_full <- data.frame(id = colon_fasta_full[grepl("[0-9]+", colon_fasta_full)],
full_sequence = colon_fasta_full[!grepl("[0-9]+", colon_fasta_full)])
View(colon_fasta_full)
colon_tbl <- colon_tbl %>%
rowwise() %>%
mutate(full_sequence = colon_fasta_full$full_sequence[grepl(guide_sequence,
colon_fasta_full$full_sequence)])
colon_tbl <- colon_tbl %>%
rowwise() %>%
mutate(full_sequence = list(colon_fasta_full$full_sequence[grepl(guide_sequence,
colon_fasta_full$full_sequence)]))
View(colon_tbl)
colon_fasta <- readLines("~/Documents/CancerMPRA/CRISPR_KO/colon_crispr_ko_guide_sequences.fa")
colon_fasta_full <- readLines("~/Documents/CancerMPRA/CRISPR_KO/crispr_ko_guide_library_12022020.txt")
colon_tbl <- data.frame(guide_name = colon_fasta[grepl(">", colon_fasta)],
guide_sequence = colon_fasta[!grepl(">", colon_fasta)])
colon_tbl <- colon_tbl %>%
mutate(guide_name = str_remove( guide_name, "^>"))
colon_fasta_full <- data.frame(id = colon_fasta_full[grepl("[0-9]+", colon_fasta_full)],
full_sequence = colon_fasta_full[!grepl("[0-9]+", colon_fasta_full)])
colon_tbl <- colon_tbl %>%
rowwise() %>%
mutate(full_sequence = length(colon_fasta_full$full_sequence[grepl(guide_sequence,
colon_fasta_full$full_sequence)]))
View(colon_tbl)
View(colon_fasta_full)
colon_tbl <- colon_tbl %>%
rowwise() %>%
mutate(full_sequence = length(colon_fasta_full$full_sequence[grepl(paste0("CCG", guide_sequence),
colon_fasta_full$full_sequence)]))
colon_tbl <- colon_tbl %>%
rowwise() %>%
mutate(full_sequence = colon_fasta_full$full_sequence[grepl(paste0("CCG", guide_sequence),
colon_fasta_full$full_sequence)])
View(colon_tbl)
write_tsv(colon_tbl, "~/Documents/CancerMPRA/CRISPR_KO/colon_crispr_ko_screen_guide_sequences_table.tsv")
knitr::opts_chunk$set(echo = TRUE)
cosmic <- read_csv("~/Documents/CancerMPRA/COSMIC_OMIM/cancer_gene_census.csv")
# already only tier 1 or 2, these are filtered enough
omim <- read_tsv("~/Documents/CancerMPRA/COSMIC_OMIM/morbidmap_reformat.txt",
skip = 3)
res_merge <- read_tsv("~/Documents/Old_CancerMPRA_Rproj/CancerMPRA_noGM_noH9/output/res_merge_withhitannot_20230627.tsv")
ptgene_list <- res_merge %>%
dplyr::filter(!is.na(hit_spec)) %>%
dplyr::select(locus, gtex_spec_lead_shared, eqtlgen_egene_lead_shared,
genes_within_10kb, hichip_egene) %>%
pivot_longer(cols = -locus, names_to = "gene_source",
values_to = "ptgene") %>%
dplyr::filter(!is.na(ptgene)) %>%
dplyr::select(-gene_source, -locus) %>%
mutate(ptgene = str_split(ptgene, ",|;")) %>%
unnest(ptgene) %>%
distinct()
omim_filt <- omim %>%
mutate(gene = str_split(`Gene/Locus And Other Related Symbols`, ",")) %>%
unnest(gene) %>%
dplyr::filter(gene %in% ptgene_list$ptgene)
View(omim_filt)
omim_cancer <- omim_filt %>%
dplyr::filter(grepl("ancer|arcinoma|eukemia|ymphoma|Fanconi|Tumor|umor|elanoma|Diamond|Hippel|myeloma|Myeloma|Saethre|Werner|Xeroderma|Cowden|Seckel|sarcoma|Noonan"))
omim_cancer <- omim_filt %>%
dplyr::filter(grepl("ancer|arcinoma|eukemia|ymphoma|Fanconi|Tumor|umor|elanoma|Diamond|Hippel|myeloma|Myeloma|Saethre|Werner|Xeroderma|Cowden|Seckel|sarcoma|Noonan", Phenotype))
View(omim_cancer)
knitr::opts_chunk$set(echo = TRUE)
res_merge <- read_tsv(here("output/res_merge_withhitannot_20230627.tsv"))
library(here)
library(tidyverse)
res_merge <- read_tsv(here("output/res_merge_withhitannot_20230627.tsv"))
main_table <- dplyr::filter(res_merge, !is.na(disease))
main_table <- dplyr::filter(main_table, !is.na(hit_spec))
snvs_to_include <- c("rs10411210", "rs9929239", "rs58821592", "rs890434", "rs6066825")
genes_to_include <- c("CDH1", "CDH3", "FANCA", "XPA", "SMAD", "STAT3",
"RUVBL1", "EGFR", "MYC", "CDKN2A", "UBA52", "CHEK2",
"CENPO", "DAP3", "MRPL51", "MRPL34", "CASP8",
"CASP10", "MDM4", "LAM", "TGFB1", "BMP4", "VARS2", "SURF1")
main_table <- main_table %>% rowwise() %>%
mutate(ptGenes = ifelse(sum(!is.na(gtex_spec_lead_shared)|!is.na(eqtlgen_egene_lead_shared)|!is.na(hichip_egene)|!is.na(genes_within_10kb)) > 0,
paste(sort(unique(unlist(str_split(c(gtex_spec_lead_shared[!is.na(gtex_spec_lead_shared)],
eqtlgen_egene_lead_shared[!is.na(eqtlgen_egene_lead_shared)],
hichip_egene[!is.na(hichip_egene)],
genes_within_10kb[!is.na(genes_within_10kb)]), ",|;")))), collapse = ","), NA))
main_table <- main_table %>%
dplyr::filter(Causal_SNP %in% snvs_to_include |
grepl(paste(genes_to_include, collapse = "|"), ptGenes))
# will need to unnest and convert hit_any_celltype, hit_spec, and disease
main_table_cut <- dplyr::select(main_table, locus, disease, hit_any_celltype, hit_spec, hichip_cell_type) %>%
mutate(disease = str_split(disease, ",")) %>%
unnest(disease) %>%
rowwise() %>%
mutate(disease = name_key$cancer[name_key$celltype == disease]) %>%
group_by(locus, hit_any_celltype, hit_spec, hichip_cell_type) %>%
summarise(disease = paste(sort(disease), collapse = ",")) %>%
mutate(hichip_cell_type = str_split(hichip_cell_type, ",")) %>%
unnest(hichip_cell_type) %>%
rowwise() %>%
mutate(hichip_cell_type = ifelse(!is.na(hit_any_celltype),
name_key$display_name[name_key$celltype == hichip_cell_type],
NA)) %>%
group_by(locus, disease, hit_any_celltype, hit_spec) %>%
summarise(hichip_cell_type = paste(sort(hichip_cell_type), collapse = ",")) %>%
mutate(hit_any_celltype = str_split(hit_any_celltype, ",")) %>%
unnest(hit_any_celltype) %>%
rowwise() %>%
mutate(hit_any_celltype = ifelse(!is.na(hit_any_celltype),
name_key$display_name[name_key$celltype == hit_any_celltype],
NA)) %>%
group_by(locus, disease, hit_spec, hichip_cell_type) %>%
summarise(hit_any_celltype = paste(sort(hit_any_celltype[!is.na(hit_any_celltype)]), collapse = ",")) %>%
mutate(hit_spec = str_split(hit_spec, ",")) %>%
unnest(hit_spec) %>%
rowwise() %>%
mutate(hit_spec = ifelse(!is.na(hit_spec),
name_key$cancer[name_key$celltype == hit_spec],
NA)) %>%
group_by(locus, disease, hit_any_celltype, hichip_cell_type) %>%
summarise(hit_spec = paste(sort(hit_spec[!is.na(hit_spec)]), collapse = ","))
name_key <- read_tsv(here("data/celltype_name_colors.txt"))
name_key <- read_tsv(here("data/celltype_name_colors.txt"))
name_key <- read_tsv(here("data/celltype_name_colors.txt"))
res_merge <- read_tsv(here("output/res_merge_withhitannot_20230627.tsv"))
main_table <- dplyr::filter(res_merge, !is.na(disease))
main_table <- dplyr::filter(main_table, !is.na(hit_spec))
snvs_to_include <- c("rs10411210", "rs9929239", "rs58821592", "rs890434", "rs6066825")
genes_to_include <- c("CDH1", "CDH3", "FANCA", "XPA", "SMAD", "STAT3",
"RUVBL1", "EGFR", "MYC", "CDKN2A", "UBA52", "CHEK2",
"CENPO", "DAP3", "MRPL51", "MRPL34", "CASP8",
"CASP10", "MDM4", "LAM", "TGFB1", "BMP4", "VARS2", "SURF1")
main_table <- main_table %>% rowwise() %>%
mutate(ptGenes = ifelse(sum(!is.na(gtex_spec_lead_shared)|!is.na(eqtlgen_egene_lead_shared)|!is.na(hichip_egene)|!is.na(genes_within_10kb)) > 0,
paste(sort(unique(unlist(str_split(c(gtex_spec_lead_shared[!is.na(gtex_spec_lead_shared)],
eqtlgen_egene_lead_shared[!is.na(eqtlgen_egene_lead_shared)],
hichip_egene[!is.na(hichip_egene)],
genes_within_10kb[!is.na(genes_within_10kb)]), ",|;")))), collapse = ","), NA))
main_table <- main_table %>%
dplyr::filter(Causal_SNP %in% snvs_to_include |
grepl(paste(genes_to_include, collapse = "|"), ptGenes))
# will need to unnest and convert hit_any_celltype, hit_spec, and disease
main_table_cut <- dplyr::select(main_table, locus, disease, hit_any_celltype, hit_spec, hichip_cell_type) %>%
mutate(disease = str_split(disease, ",")) %>%
unnest(disease) %>%
rowwise() %>%
mutate(disease = name_key$cancer[name_key$celltype == disease]) %>%
group_by(locus, hit_any_celltype, hit_spec, hichip_cell_type) %>%
summarise(disease = paste(sort(disease), collapse = ",")) %>%
mutate(hichip_cell_type = str_split(hichip_cell_type, ",")) %>%
unnest(hichip_cell_type) %>%
rowwise() %>%
mutate(hichip_cell_type = ifelse(!is.na(hit_any_celltype),
name_key$display_name[name_key$celltype == hichip_cell_type],
NA)) %>%
group_by(locus, disease, hit_any_celltype, hit_spec) %>%
summarise(hichip_cell_type = paste(sort(hichip_cell_type), collapse = ",")) %>%
mutate(hit_any_celltype = str_split(hit_any_celltype, ",")) %>%
unnest(hit_any_celltype) %>%
rowwise() %>%
mutate(hit_any_celltype = ifelse(!is.na(hit_any_celltype),
name_key$display_name[name_key$celltype == hit_any_celltype],
NA)) %>%
group_by(locus, disease, hit_spec, hichip_cell_type) %>%
summarise(hit_any_celltype = paste(sort(hit_any_celltype[!is.na(hit_any_celltype)]), collapse = ",")) %>%
mutate(hit_spec = str_split(hit_spec, ",")) %>%
unnest(hit_spec) %>%
rowwise() %>%
mutate(hit_spec = ifelse(!is.na(hit_spec),
name_key$cancer[name_key$celltype == hit_spec],
NA)) %>%
group_by(locus, disease, hit_any_celltype, hichip_cell_type) %>%
summarise(hit_spec = paste(sort(hit_spec[!is.na(hit_spec)]), collapse = ","))
main_table <- dplyr::select(main_table, -disease, -hit_any_celltype, -hit_spec, -hichip_cell_type)
main_table <- full_join(main_table, main_table_cut)
main_table <- main_table %>%
dplyr::select(SNP = Causal_SNP, Ref, Alt, `Cancer Type` = disease,
2:43,
`Chr (hg19)` = Chr_37, `Position (hg19)` = Start_37,
`Lead SNP` = lead_snp, PUBMEDID,
`Lead SNP OR or Beta` = `OR or BETA`,
`GWAS risk allele` = gwas_risk_allele,
ptGenes,
`GTEx eGenes (tissue specific)` = gtex_egenes_spec,
`GTEx eGenes (shared with lead SNV)` = gtex_spec_lead_shared,
`eQTLgen eGenes` = eqtlgen_egenes,
`eQTLgen eGenes (shared with lead SNV)` = eqtlgen_egene_lead_shared,
`H3K27ac HiChIP ptGenes` = hichip_egene,
`H3K27ac HiChIP cell type` = hichip_cell_type,
`Nearby genes` = genes_within_10kb,
`Cell types with differential activity` = hit_any_celltype,
`daSNV celltype` = hit_spec)
main_table <- main_table[!grepl("pval", colnames(main_table))]
cosmic <- read_csv("~/Documents/CancerMPRA/COSMIC_OMIM/cancer_gene_census.csv")
# already only tier 1 or 2, these are filtered enough
omim <- read_tsv("~/Documents/CancerMPRA/COSMIC_OMIM/morbidmap_reformat.txt",
skip = 3)
ptgene_list <- res_merge %>%
dplyr::filter(!is.na(hit_spec)) %>%
dplyr::select(locus, gtex_spec_lead_shared, eqtlgen_egene_lead_shared,
genes_within_10kb, hichip_egene) %>%
pivot_longer(cols = -locus, names_to = "gene_source",
values_to = "ptgene") %>%
dplyr::filter(!is.na(ptgene)) %>%
dplyr::select(-gene_source, -locus) %>%
mutate(ptgene = str_split(ptgene, ",|;")) %>%
unnest(ptgene) %>%
distinct()
omim_filt <- omim %>%
mutate(gene = str_split(`Gene/Locus And Other Related Symbols`, ",")) %>%
unnest(gene) %>%
dplyr::filter(gene %in% ptgene_list$ptgene)
omim_cancer <- omim_filt %>%
dplyr::filter(grepl("ancer|arcinoma|eukemia|ymphoma|Fanconi|Tumor|umor|elanoma|Diamond|Hippel|myeloma|Myeloma|Saethre|Werner|Xeroderma|Cowden|Seckel|sarcoma|Noonan", Phenotype))
View(main_table)
View(main_table_cut)
colnames(main_table)
main_table_genes <- main_table %>%
mutate(ptGenes = str_split(ptGenes, ",")) %>%
unnest(ptGenes)
View(main_table)
View(main_table_genes)
View(omim_cancer)
View(cosmic)
main_table_genes <- main_table_genes %>%
mutate(omim = ifelse(ptGenes %in% omim_cancer$gene, T, F),
cosmic = ifelse(ptGenes %in% cosmic$`Gene Symbol`, T, F))
main_table_genes <- main_table %>%
mutate(ptGenes = str_split(ptGenes, ",")) %>%
unnest(ptGenes)
main_table_genes <- main_table_genes %>%
mutate(omim = ifelse(ptGenes %in% omim_cancer$gene, T, F),
cosmic = ifelse(ptGenes %in% cosmic$`Gene Symbol`, T, F)) %>%
distinct()
View(main_table_genes)
main_table_genes <- main_table %>%
mutate(ptGenes = str_split(ptGenes, ",")) %>%
unnest(ptGenes)
main_table_genes <- main_table_genes %>%
mutate(omim = ifelse(ptGenes %in% omim_cancer$gene, T, F),
cosmic = ifelse(ptGenes %in% cosmic$`Gene Symbol`, T, F)) %>%
dplyr::select(ptGenes, omim, cosmic) %>%
distinct()
main_table_genes <- main_table %>%
mutate(ptGenes = str_split(ptGenes, ",")) %>%
unnest(ptGenes)
main_table_genes <- main_table_genes %>%
mutate(omim = ifelse(ptGenes %in% omim_cancer$gene, T, F),
cosmic = ifelse(ptGenes %in% cosmic$`Gene Symbol`, T, F)) %>%
dplyr::select(ptGenes, omim, cosmic) %>%
dplyr::filter(omim | cosmic) %>%
distinct()
View(main_table_genes)
omim_cancer <- omim_cancer %>%
dplyr::filter(!grepl("somatic", Phenotype))
main_table_genes <- main_table %>%
mutate(ptGenes = str_split(ptGenes, ",")) %>%
unnest(ptGenes)
main_table_genes <- main_table_genes %>%
mutate(omim = ifelse(ptGenes %in% omim_cancer$gene, T, F),
cosmic = ifelse(ptGenes %in% cosmic$`Gene Symbol`, T, F)) %>%
dplyr::select(ptGenes, omim, cosmic) %>%
dplyr::filter(omim | cosmic) %>%
distinct()
omim_cancer <- omim_cancer %>%
dplyr::filter(!grepl("somatic|susceptibility", Phenotype))
main_table_genes <- main_table %>%
mutate(ptGenes = str_split(ptGenes, ",")) %>%
unnest(ptGenes)
main_table_genes <- main_table_genes %>%
mutate(omim = ifelse(ptGenes %in% omim_cancer$gene, T, F),
cosmic = ifelse(ptGenes %in% cosmic$`Gene Symbol`, T, F)) %>%
dplyr::select(ptGenes, omim, cosmic) %>%
dplyr::filter(omim | cosmic) %>%
distinct()
